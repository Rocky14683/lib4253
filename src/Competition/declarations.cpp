#include "main.h"
#include "declarations.hpp"
using namespace lib4253;
using namespace okapi::literals;

okapi::Controller master(okapi::ControllerId::master);

okapi::Motor LF(10, true, okapi::AbstractMotor::gearset::blue, okapi::AbstractMotor::encoderUnits::degrees);
okapi::Motor LB(9, false, okapi::AbstractMotor::gearset::blue, okapi::AbstractMotor::encoderUnits::degrees);
okapi::Motor RF(8, false, okapi::AbstractMotor::gearset::blue, okapi::AbstractMotor::encoderUnits::degrees);
okapi::Motor RB(7, true, okapi::AbstractMotor::gearset::blue, okapi::AbstractMotor::encoderUnits::degrees);


okapi::ADIEncoder leftEncoder('A', 'B', true);
okapi::ADIEncoder rightEncoder('E', 'F', false);
okapi::ADIEncoder midEncoder('C', 'D', false);

pros::Imu imuBottom(11);
pros::Imu imuTop(12);

okapi::ADIButton leftAutonSelector('G');
okapi::ADIButton rightAutonSelector('H');

std::shared_ptr<lib4253::Motor> leftBack;
std::shared_ptr<lib4253::Motor> leftFront;
std::shared_ptr<lib4253::Motor> leftTop;
std::shared_ptr<lib4253::Motor> rightBack;
std::shared_ptr<lib4253::Motor> rightFront;
std::shared_ptr<lib4253::Motor> rightTop;

std::shared_ptr<lib4253::Odometry> odom;
std::shared_ptr<lib4253::Chassis> chassis;
std::shared_ptr<lib4253::OdomController> odomController;

void initSubsystems(){
    leftBack = std::make_shared<lib4253::Motor>(1, AbstractMotor::gearset::blue, 1, std::tuple<double, double, double>{1, 1, 1});
    leftFront = std::make_shared<lib4253::Motor>(1, AbstractMotor::gearset::blue, 1, std::tuple<double, double, double>{1, 1, 1});
    leftTop = std::make_shared<lib4253::Motor>(1, AbstractMotor::gearset::blue, 1, std::tuple<double, double, double>{1, 1, 1});
    rightBack = std::make_shared<lib4253::Motor>(1, AbstractMotor::gearset::blue, 1, std::tuple<double, double, double>{1, 1, 1});
    rightFront = std::make_shared<lib4253::Motor>(1, AbstractMotor::gearset::blue, 1, std::tuple<double, double, double>{1, 1, 1});
    rightTop = std::make_shared<lib4253::Motor>(1, AbstractMotor::gearset::blue, 1, std::tuple<double, double, double>{1, 1, 1});

    odom = std::make_shared<ThreeWheelOdometry>(
        std::make_shared<ADIEncoder>('A', 'B', true), 
        std::make_shared<ADIEncoder>('C', 'D', false),
        std::make_shared<ADIEncoder>('E', 'F', false), 
        OdomDimension(3.389_in, 5.748_in, 3.389_in)
    );

    chassis = std::make_shared<Chassis>(
        std::initializer_list<std::shared_ptr<lib4253::Motor>>{leftFront, leftBack, leftTop},
        std::initializer_list<std::shared_ptr<lib4253::Motor>>{rightFront, rightBack, leftTop},
        ChassisScales({4.14_in, 12.44_in}, 360),
        std::make_shared<IMU>(3),
        std::move(std::make_unique<SlewController>(9, 256)),
        std::move(std::make_unique<PID>(0, 0, 0)),
        std::move(std::make_unique<PID>(0, 0, 0)),
        std::move(std::make_unique<PID>(0, 0, 0))
    );

    odomController = std::make_shared<OdomController>(
        chassis, odom, 3_in,
        std::move(std::make_unique<PID>(0, 0, 0)),
        std::move(std::make_unique<PID>(0, 0, 0)),
        std::move(std::make_unique<PID>(0, 0, 0)),
        std::move(std::make_unique<SlewController>(9, 256))
    );

    odom->reset();
    chassis->initialize();

    chassis->moveDistance(25, Settler::makeSettler().withMaxTime(5_s).withMaxError(0.5).withMaxDeriv(0).wait(200_ms));
    odomController->moveToPoint(Point2D(3, 6), 1.5, Settler::makeSettler().withMaxTime(40000_ms).withMaxError(1).wait(200_ms));
}

void startTask(){
    chassis->startTask();
    odom->startTask();
}

/*
  drive
    .withDimensions({4.35}, {36, 84}, {12})
    .withDrivePID({0, 0, 0}, {1, 1}, {1})
    .withTurnPID({0, 0, 0}, {1, 1}, {1})
    .withPurePursuit({6}, {2}, {1, 1})
    .withSlew(256, 9)
    .initialize();
    */

std::vector<TrajectoryPoint> tenTileLeft = {
    {0,0},
    {0.036,3.3},
    {0.0689,3.4632},
    {0.1129,4.2008},
    {0.1562,4.6911},
    {0.1983,4.2489},
    {0.2427,4.3261},
    {0.2873,4.4502},
    {0.3311,4.432},
    {0.3751,4.3495},
    {0.4193,4.4298},
    {0.463,4.4222},
    {0.5069,4.3626},
    {0.5509,4.4216},
    {0.5945,4.4174},
    {0.6383,4.3707},
    {0.6825,4.3768},
    {0.7265,4.4583},
    {0.7704,4.3406},
    {0.8145,4.4529},
    {0.8582,4.3797},
    {0.9023,4.3831},
    {0.9464,4.4152},
    {0.9902,4.4135},
    {1.0341,4.3851},
    {1.0782,4.3874},
    {1.1223,4.4139},
    {1.1664,4.3889},
    {1.2104,4.4134},
    {1.2542,4.4123},
    {1.2982,4.3688},
    {1.3422,4.4343},
    {1.3861,4.3713},
    {1.4302,4.4129},
    {1.4742,4.3933},
    {1.5182,4.4124},
    {1.562,4.394},
    {1.606,4.3949},
    {1.6501,4.3957},
    {1.6942,4.4126},
    {1.7381,4.3961},
    {1.7821,4.3968},
    {1.8262,4.3974},
    {1.8701,4.4125},
    {1.9141,4.3836},
    {1.9581,4.4128},
    {2.0021,4.3987},
    {2.0461,4.3861},
    {2.0902,4.4131},
    {2.1342,4.4},
    {2.1781,4.4003},
    {2.2221,4.4007},
    {2.2661,4.3893},
    {2.3101,4.4133},
    {2.3541,4.3903},
    {2.3982,4.4023},
    {2.4422,4.4025},
    {2.4861,4.4028},
    {2.5301,4.3926},
    {2.5742,4.4036},
    {2.6181,4.4037},
    {2.6621,4.3942},
    {2.7061,4.4044},
    {2.7501,4.3952},
    {2.7941,4.405},
    {2.8381,4.3961},
    {2.8821,4.4056},
    {2.926,4.397},
    {2.97,4.3975},
    {3.0141,4.398},
    {3.0581,4.4068},
    {3.102,4.3987},
    {3.1461,4.3913},
    {3.1901,4.4077},
    {3.2341,4.4},
    {3.2781,4.4004},
    {3.3221,4.4008},
    {3.3661,4.3939},
    {3.4101,4.4089},
    {3.454,4.3948},
    {3.498,4.4023},
    {3.542,4.3958},
    {3.586,4.4031},
    {3.6301,4.3968},
    {3.6741,4.4038},
    {3.7181,4.3977},
    {3.762,4.4044},
    {3.806,4.3923},
    {3.8501,4.4052},
    {3.8941,4.3994},
    {3.9381,4.3998},
    {3.9821,4.4002},
    {4.026,4.4006},
    {4.07,4.4009},
    {4.114,4.3958},
    {4.1581,4.4018},
    {4.2021,4.4021},
    {4.2461,4.3971},
    {4.2901,4.4028},
    {4.3341,4.3979},
    {4.378,4.4034},
    {4.4,2.1955},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.388,-1.1952},
    {4.3456,-4.2519},
    {4.3016,-4.3986},
    {4.2576,-4.3933},
    {4.2136,-4.4106},
    {4.1696,-4.3941},
    {4.1256,-4.4001},
    {4.0816,-4.4005},
    {4.0376,-4.401},
    {3.9936,-4.4015},
    {3.9496,-4.3957},
    {3.9056,-4.4023},
    {3.8616,-4.4028},
    {3.8176,-4.3968},
    {3.7736,-4.3971},
    {3.7295,-4.4042},
    {3.6855,-4.3979},
    {3.6415,-4.4053},
    {3.5976,-4.3988},
    {3.5535,-4.3919},
    {3.5095,-4.4067},
    {3.4655,-4.3999},
    {3.4215,-4.4003},
    {3.3775,-4.4008},
    {3.3336,-4.4012},
    {3.2896,-4.3936},
    {3.2455,-4.4019},
    {3.2015,-4.4024},
    {3.1575,-4.403},
    {3.1135,-4.3949},
    {3.0695,-4.4038},
    {3.0255,-4.3955},
    {2.9815,-4.4048},
    {2.9375,-4.3961},
    {2.8935,-4.4058},
    {2.8496,-4.3968},
    {2.8055,-4.3971},
    {2.7616,-4.4074},
    {2.7175,-4.3877},
    {2.6735,-4.4083},
    {2.6294,-4.3985},
    {2.5854,-4.3988},
    {2.5415,-4.4102},
    {2.4975,-4.3885},
    {2.4534,-4.3998},
    {2.4095,-4.412},
    {2.3655,-4.3889},
    {2.3214,-4.4009},
    {2.2774,-4.4014},
    {2.2334,-4.4019},
    {2.1894,-4.4024},
    {2.1455,-4.4029},
    {2.1015,-4.3896},
    {2.0575,-4.4034},
    {2.0135,-4.4041},
    {1.9694,-4.3899},
    {1.9255,-4.4201},
    {1.8815,-4.375},
    {1.8374,-4.4216},
    {1.7935,-4.3906},
    {1.7494,-4.3902},
    {1.7054,-4.4247},
    {1.6614,-4.3734},
    {1.6174,-4.4268},
    {1.5734,-4.3725},
    {1.5294,-4.4292},
    {1.4854,-4.3715},
    {1.4412,-4.4107},
    {1.3973,-4.4122},
    {1.3533,-4.3914},
    {1.3092,-4.3909},
    {1.2652,-4.4142},
    {1.2212,-4.3912},
    {1.1773,-4.4166},
    {1.1334,-4.3918},
    {1.0894,-4.3912},
    {1.0452,-4.3904},
    {1.0011,-4.4201},
    {0.9571,-4.3911},
    {0.9133,-4.4242},
    {0.8693,-4.3573},
    {0.8251,-4.4252},
    {0.781,-4.3902},
    {0.7372,-4.4314},
    {0.6931,-4.3479},
    {0.6488,-4.4331},
    {0.6048,-4.389},
    {0.561,-4.4436},
    {0.5171,-4.333},
    {0.4729,-4.4475},
    {0.429,-4.3882},
    {0.3849,-4.3843},
    {0.3404,-4.3783},
    {0.2965,-4.4803},
    {0.2519,-4.2657},
    {0.2069,-4.4876},
    {0.1622,-4.3562},
    {0.1192,-4.625},
    {0.0741,-4.0225},
    {0.0247,-4.4}
};
std::vector<TrajectoryPoint> tenTileRight = {
    {0,0},
    {0.036,3.3},
    {0.0689,3.4632},
    {0.1129,4.2008},
    {0.1562,4.6911},
    {0.1983,4.2489},
    {0.2427,4.3261},
    {0.2873,4.4502},
    {0.3311,4.432},
    {0.3751,4.3495},
    {0.4193,4.4298},
    {0.463,4.4222},
    {0.5069,4.3626},
    {0.5509,4.4216},
    {0.5945,4.4174},
    {0.6383,4.3707},
    {0.6825,4.3768},
    {0.7265,4.4583},
    {0.7704,4.3406},
    {0.8145,4.4529},
    {0.8582,4.3797},
    {0.9023,4.3831},
    {0.9464,4.4152},
    {0.9902,4.4135},
    {1.0341,4.3851},
    {1.0782,4.3874},
    {1.1223,4.4139},
    {1.1664,4.3889},
    {1.2104,4.4134},
    {1.2542,4.4123},
    {1.2982,4.3688},
    {1.3422,4.4343},
    {1.3861,4.3713},
    {1.4302,4.4129},
    {1.4742,4.3933},
    {1.5182,4.4124},
    {1.562,4.394},
    {1.606,4.3949},
    {1.6501,4.3957},
    {1.6942,4.4126},
    {1.7381,4.3961},
    {1.7821,4.3968},
    {1.8262,4.3974},
    {1.8701,4.4125},
    {1.9141,4.3836},
    {1.9581,4.4128},
    {2.0021,4.3987},
    {2.0461,4.3861},
    {2.0902,4.4131},
    {2.1342,4.4},
    {2.1781,4.4003},
    {2.2221,4.4007},
    {2.2661,4.3893},
    {2.3101,4.4133},
    {2.3541,4.3903},
    {2.3982,4.4023},
    {2.4422,4.4025},
    {2.4861,4.4028},
    {2.5301,4.3926},
    {2.5742,4.4036},
    {2.6181,4.4037},
    {2.6621,4.3942},
    {2.7061,4.4044},
    {2.7501,4.3952},
    {2.7941,4.405},
    {2.8381,4.3961},
    {2.8821,4.4056},
    {2.926,4.397},
    {2.97,4.3975},
    {3.0141,4.398},
    {3.0581,4.4068},
    {3.102,4.3987},
    {3.1461,4.3913},
    {3.1901,4.4077},
    {3.2341,4.4},
    {3.2781,4.4004},
    {3.3221,4.4008},
    {3.3661,4.3939},
    {3.4101,4.4089},
    {3.454,4.3948},
    {3.498,4.4023},
    {3.542,4.3958},
    {3.586,4.4031},
    {3.6301,4.3968},
    {3.6741,4.4038},
    {3.7181,4.3977},
    {3.762,4.4044},
    {3.806,4.3923},
    {3.8501,4.4052},
    {3.8941,4.3994},
    {3.9381,4.3998},
    {3.9821,4.4002},
    {4.026,4.4006},
    {4.07,4.4009},
    {4.114,4.3958},
    {4.1581,4.4018},
    {4.2021,4.4021},
    {4.2461,4.3971},
    {4.2901,4.4028},
    {4.3341,4.3979},
    {4.378,4.4034},
    {4.4,2.1955},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.4,0},
    {4.388,-1.1952},
    {4.3456,-4.2519},
    {4.3016,-4.3986},
    {4.2576,-4.3933},
    {4.2136,-4.4106},
    {4.1696,-4.3941},
    {4.1256,-4.4001},
    {4.0816,-4.4005},
    {4.0376,-4.401},
    {3.9936,-4.4015},
    {3.9496,-4.3957},
    {3.9056,-4.4023},
    {3.8616,-4.4028},
    {3.8176,-4.3968},
    {3.7736,-4.3971},
    {3.7295,-4.4042},
    {3.6855,-4.3979},
    {3.6415,-4.4053},
    {3.5976,-4.3988},
    {3.5535,-4.3919},
    {3.5095,-4.4067},
    {3.4655,-4.3999},
    {3.4215,-4.4003},
    {3.3775,-4.4008},
    {3.3336,-4.4012},
    {3.2896,-4.3936},
    {3.2455,-4.4019},
    {3.2015,-4.4024},
    {3.1575,-4.403},
    {3.1135,-4.3949},
    {3.0695,-4.4038},
    {3.0255,-4.3955},
    {2.9815,-4.4048},
    {2.9375,-4.3961},
    {2.8935,-4.4058},
    {2.8496,-4.3968},
    {2.8055,-4.3971},
    {2.7616,-4.4074},
    {2.7175,-4.3877},
    {2.6735,-4.4083},
    {2.6294,-4.3985},
    {2.5854,-4.3988},
    {2.5415,-4.4102},
    {2.4975,-4.3885},
    {2.4534,-4.3998},
    {2.4095,-4.412},
    {2.3655,-4.3889},
    {2.3214,-4.4009},
    {2.2774,-4.4014},
    {2.2334,-4.4019},
    {2.1894,-4.4024},
    {2.1455,-4.4029},
    {2.1015,-4.3896},
    {2.0575,-4.4034},
    {2.0135,-4.4041},
    {1.9694,-4.3899},
    {1.9255,-4.4201},
    {1.8815,-4.375},
    {1.8374,-4.4216},
    {1.7935,-4.3906},
    {1.7494,-4.3902},
    {1.7054,-4.4247},
    {1.6614,-4.3734},
    {1.6174,-4.4268},
    {1.5734,-4.3725},
    {1.5294,-4.4292},
    {1.4854,-4.3715},
    {1.4412,-4.4107},
    {1.3973,-4.4122},
    {1.3533,-4.3914},
    {1.3092,-4.3909},
    {1.2652,-4.4142},
    {1.2212,-4.3912},
    {1.1773,-4.4166},
    {1.1334,-4.3918},
    {1.0894,-4.3912},
    {1.0452,-4.3904},
    {1.0011,-4.4201},
    {0.9571,-4.3911},
    {0.9133,-4.4242},
    {0.8693,-4.3573},
    {0.8251,-4.4252},
    {0.781,-4.3902},
    {0.7372,-4.4314},
    {0.6931,-4.3479},
    {0.6488,-4.4331},
    {0.6048,-4.389},
    {0.561,-4.4436},
    {0.5171,-4.333},
    {0.4729,-4.4475},
    {0.429,-4.3882},
    {0.3849,-4.3843},
    {0.3404,-4.3783},
    {0.2965,-4.4803},
    {0.2519,-4.2657},
    {0.2069,-4.4876},
    {0.1622,-4.3562},
    {0.1192,-4.625},
    {0.0741,-4.0225},
    {0.0247,-4.4}
};

void initPaths(){
    Trajectory tenTile(tenTileLeft, tenTileRight);
    //Robot::addPath("10", tenTile);
}